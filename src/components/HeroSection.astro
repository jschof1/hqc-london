---
export interface Props {
  title: string;
  subtitle: string;
  imageSrc: string;
  imageAlt: string;
  primaryCta?: {
    text: string;
    href: string;
  };
  secondaryCta?: {
    text: string;
    href: string;
    icon?: string;
    target?: string;
    rel?: string;
  };
  trustBadges?: Array<{
    icon: string;
    text: string;
  }>;
  backgroundClass?: string;
}

const {
  title,
  subtitle,
  imageSrc,
  imageAlt,
  primaryCta = {
    text: "Get My Quote",
    href: "index.html#quote"
  },
  secondaryCta = {
    text: "Message on WhatsApp",
    href: "https://wa.me/07824390336",
    icon: "fab fa-whatsapp",
    target: "_blank",
    rel: "noopener nofollow"
  },
  trustBadges = [
    { icon: "fas fa-pound-sign", text: "£5M Insurance" },
    { icon: "fas fa-shield-check", text: "100% DBS-checked" },
    { icon: "fas fa-star", text: "Five‑Star Average" }
  ],
  backgroundClass = "bg-navy"
} = Astro.props;
---

<section class={backgroundClass}>
  <div class="relative w-full h-[70vh] min-h-[500px] max-h-[800px] md:h-[60vh] lg:h-[70vh]">
    <img
      src={imageSrc}
      alt={imageAlt}
      class="image-transition w-full h-full object-cover"
      fetchpriority="high"
    />
    <div
      class="absolute inset-0 bg-gradient-to-t from-navy via-navy/70 to-transparent"
    ></div>
    <div
      class="absolute inset-0 flex items-end pb-8 md:pb-12 lg:pb-20 px-4 sm:px-6 lg:px-8"
    >
      <div class="mx-auto max-w-5xl w-full">
        <div class="text-transition">
          <h1 class="font-serif text-3xl sm:text-4xl md:text-5xl lg:text-6xl text-white leading-tight">
            {title}
          </h1>
          <p class="mt-3 md:mt-4 text-white/90 text-sm sm:text-base md:text-lg max-w-2xl leading-relaxed">
            {subtitle}
          </p>
        </div>
        <div class="text-transition mt-6 md:mt-8 flex flex-col sm:flex-row gap-3 md:gap-4">
          {primaryCta && (
            <a
              href={primaryCta.href}
              class="inline-flex items-center justify-center rounded-md bg-gold text-navy px-6 py-3 text-sm sm:text-base font-medium border border-gold hover:bg-gold/90 transition-colors min-h-[48px]"
            >
              {primaryCta.text}
            </a>
          )}
          {secondaryCta && (
            <a
              href={secondaryCta.href}
              target={secondaryCta.target}
              rel={secondaryCta.rel}
              class="inline-flex items-center justify-center rounded-md border border-gold px-6 py-3 text-gold text-sm sm:text-base bg-navy/50 backdrop-blur-sm hover:bg-navy/70 transition-colors min-h-[48px]"
            >
              {secondaryCta.icon && secondaryCta.icon === "fab fa-whatsapp" ? (
                <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.787"/>
                </svg>
              ) : (
                secondaryCta.icon && <i class={`${secondaryCta.icon} mr-2`}></i>
              )}
              {secondaryCta.text}
            </a>
          )}
        </div>

        {trustBadges && trustBadges.length > 0 && (
          <!-- Trust badges -->
          <div
            class="mt-6 md:mt-8 flex items-center gap-4 md:gap-6 text-xs sm:text-sm text-white/80 flex-wrap"
          >
            {trustBadges.map((badge, index) => (
              <>
                <span class="inline-flex items-center gap-1.5 sm:gap-2">
                  <div class="h-5 w-5 sm:h-6 sm:w-6 rounded border border-gold bg-gold/20 flex items-center justify-center">
                    <i class={`${badge.icon} text-gold text-xs`}></i>
                  </div>
                  {badge.text}
                </span>
                {index < trustBadges.length - 1 && (
                  <span class="h-4 w-px bg-white/30"></span>
                )}
              </>
            ))}
          </div>
        )}
      </div>
    </div>
  </div>
</section>
